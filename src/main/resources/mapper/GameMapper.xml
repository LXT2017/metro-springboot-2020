<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mt.metro.mapper.GameMapper" >
  <resultMap id="BaseResultMap" type="com.mt.metro.entity.Game" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="max_distance" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="max_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="total_distance" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="addition" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, max_distance, max_score, total_distance, user_id, addition
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mt.metro.entity.GameExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from game
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from game
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mt.metro.entity.GameExample" >
    delete from game
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mt.metro.entity.Game" >
    insert into game (id, max_distance, max_score, 
      total_distance, user_id, addition
      )
    values (#{id,jdbcType=INTEGER}, #{maxDistance,jdbcType=INTEGER}, #{maxScore,jdbcType=INTEGER}, 
      #{totalDistance,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{addition,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mt.metro.entity.Game" >
    insert into game
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="maxDistance != null" >
        max_distance,
      </if>
      <if test="maxScore != null" >
        max_score,
      </if>
      <if test="totalDistance != null" >
        total_distance,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="addition != null" >
        addition,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="maxDistance != null" >
        #{maxDistance,jdbcType=INTEGER},
      </if>
      <if test="maxScore != null" >
        #{maxScore,jdbcType=INTEGER},
      </if>
      <if test="totalDistance != null" >
        #{totalDistance,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="addition != null" >
        #{addition,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mt.metro.entity.GameExample" resultType="java.lang.Integer" >
    select count(*) from game
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update game
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.maxDistance != null" >
        max_distance = #{record.maxDistance,jdbcType=INTEGER},
      </if>
      <if test="record.maxScore != null" >
        max_score = #{record.maxScore,jdbcType=INTEGER},
      </if>
      <if test="record.totalDistance != null" >
        total_distance = #{record.totalDistance,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.addition != null" >
        addition = #{record.addition,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update game
    set id = #{record.id,jdbcType=INTEGER},
      max_distance = #{record.maxDistance,jdbcType=INTEGER},
      max_score = #{record.maxScore,jdbcType=INTEGER},
      total_distance = #{record.totalDistance,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      addition = #{record.addition,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mt.metro.entity.Game" >
    update game
    <set >
      <if test="maxDistance != null" >
        max_distance = #{maxDistance,jdbcType=INTEGER},
      </if>
      <if test="maxScore != null" >
        max_score = #{maxScore,jdbcType=INTEGER},
      </if>
      <if test="totalDistance != null" >
        total_distance = #{totalDistance,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="addition != null" >
        addition = #{addition,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mt.metro.entity.Game" >
    update game
    set max_distance = #{maxDistance,jdbcType=INTEGER},
      max_score = #{maxScore,jdbcType=INTEGER},
      total_distance = #{totalDistance,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      addition = #{addition,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>